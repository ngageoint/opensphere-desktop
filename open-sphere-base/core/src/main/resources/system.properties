# Java properties
sun.java2d.noddraw=true
sun.awt.noerasebackground=true
sun.net.http.allowRestrictedHeaders=true
jogl.glu.nojava
#jogamp.gluegen.UseTempJarCache=false
#javax.net.ssl.trustStore=truststore.jks
#javax.net.ssl.trustStorePassword=password
user.timezone=GMT
java.util.logging.config.class=io.opensphere.core.appl.JavaLoggingInit
java.net.useSystemProxies=true
jdk.tls.client.protocols=TLSv1,TLSv1.1,TLSv1.2

# Release notes HTML for whatsnew.properties
opensphere.whatsnew.releaseNotes_4.0.8=
opensphere.whatsnew.releaseNotes_4.0.9=
opensphere.whatsnew.releaseNotes_5.0.0=

# What's new video HTML for whatsnew.properties
opensphere.whatsnew.video_4.0.8=
opensphere.whatsnew.video_4.0.9=
opensphere.whatsnew.video_5.0.0=

# Additional video content HTML for whatsnew.properties
opensphere.whatsnew.additionalVideoContent=

# Standard content for opensphere.whatsnew.contactinfo. Once opensphere.support.email and
# opensphere.training.email are set, opensphere.whatsnew.contactinfo should be set to
# ${opensphere.whatsnew.contactinfo.default}.
opensphere.whatsnew.contactinfo.default=
opensphere.whatsnew.contactinfo=

# Customer support contact info
contact.info=

# The url for doing geoquery searches
geoquery.url=http://home.gvs.nga.ic.gov/GeoQuery/geClientQueryAction.do?query=replace_me

# User Agent Name
opensphere.useragent=OpenSphere Desktop

# Software version
opensphere.version=${project.version}

# Deployment name
opensphere.deployment.name=

# Title
opensphere.title=OpenSphere Desktop

# Title for the main frame.
opensphere.frame.title=${opensphere.title} (${opensphere.version}) ${opensphere.deployment.name}

# Icon for the main frame.
opensphere.frame.icon=/images/ToolSuite_icon_small.png

# Flag indicating if application should run in production mode.
opensphere.productionMode=true

# The minimum Java version that must be used to avoid a warning dialog.
opensphere.min.java.version=1.8.0_66

# Top directory for application to use for runtime files.
opensphere.path.runtime.default=${user.home}/opensphere/vortex
opensphere.path.runtime=${opensphere.path.runtime.default}

# The location for log files.
log.path=${opensphere.path.runtime}/logs

# The file name prefix for the log files.
log.filename=OpenSphere

# Memory status ranges
opensphere.memory.nominalLowwaterRatio=0
opensphere.memory.nominalHighwaterRatio=.7
opensphere.memory.warningLowwaterRatio=.6
opensphere.memory.warningHighwaterRatio=.9
opensphere.memory.criticalLowwaterRatio=.8
opensphere.memory.criticalHighwaterRatio=1

# Warning message to be displayed if a pipeline component cannot be used.
opensphere.pipeline.viabilityWarning=<html><body><center>Your graphics hardware does not fully support this application.<br/>Some features will not be available and performance may be reduced.<p/></center></body></html>

# Warning message to be displayed if display lists are disabled.
opensphere.pipeline.displayListWarning=<html><body><center>Your graphics hardware or driver does not support a certain graphics rendering capability, Display Lists.<br/>You have the option to enable Display Lists, but this may cause the tool to function improperly or crash.<p/></center></body></html>

# Warning message to be displayed if safe mode is enabled.
opensphere.pipeline.safeModeWarning=<html><body><center>Your graphics hardware or driver does not support some graphics rendering capabilities, so Safe Mode has been activated.<br/>You have the option to disable Safe Mode, but this may cause the tool to function improperly or crash.<p/></center></body></html>

# The class name for the shader renderer utilities.
opensphere.pipeline.shaderRendererUtilities.class=io.opensphere.core.pipeline.renderer.ShaderRendererUtilitiesGLSL

# The time budget for each render pass.
opensphere.pipeline.renderBudgetMilliseconds=1000

# Flag indicating if the immediate-mode pipeline can use display lists.
opensphere.pipeline.useDisplayLists=false

# If the GPU memory size cannot be probed, this is the number that is used.
opensphere.pipeline.gpuMemorySizeBytesDefault=2147483648

# When a tile is larger than this percentage of the tile in the center of the
# view which has been split, the tile will also be split for consistency.
opensphere.pipeline.tileprocessing.splitConsistencyFactor=.6

# Flag indicating whether NEWT should be used for the GLCanvas
opensphere.pipeline.jogl.nativeWindows=false

# Settings for polygon offset.
# These affects the position of the polygons in the depth buffer.
opensphere.pipeline.opengl.polygonOffsetFactor=1
opensphere.pipeline.opengl.polygonOffsetUnits=10000
opensphere.pipeline.opengl.polygonOffsetUnitsAti=100

# Setting for allowing moving the model center to increase accuracy near that location.
# When true the model center may be moved close to the viewer to increase rendering accuracy.
opensphere.pipeline.highAccuracy.allowed=true
# When the viewer is farther than the min distance from the model, high accuracy will not be used even when allowed.
opensphere.pipeline.highAccuracy.minModelDistance=50000
 # When the best model center is more than the threshold from the current model center, the center will be updated to the best location.
opensphere.pipeline.highAccuracy.threshold=750000

# If this is set, this number will be used instead of probing the GPU.
#opensphere.pipeline.gpuMemorySizeBytes=2147483648

# Path to the local database storage.
opensphere.db.path=${opensphere.path.runtime}/db

# Soft limit on the number of records in the database.
opensphere.db.rowLimit=1000000

# Default soft limit on the number of megabytes in the database.
opensphere.db.defaultSizeHintMB=-1

# Limit the percentage of the vm memory used for in memory database caching.
opensphere.db.nominalCacheSizePercentage=5
opensphere.db.warningCacheSizePercentage=1
opensphere.db.criticalCacheSizePercentage=0

# The default time the tool should start with. An empty value indicates no time is active.
opensphere.time=

# The number of milliseconds to advance or reverse when the user requests a time change.
opensphere.time.interval=3600000

# How many times H2 should retry connecting to the database server.
h2.socketConnectRetry=0

# Timeout on H2 socket connects in milliseconds.
h2.socketConnectTimeout=2000

# How long to wait for the cache to initialize before initializing the rest of the application.
opensphere.cache.delay.ms=-1

# The limit for the geometry cache size as a fraction of the max memory for the JVM.
opensphere.geometryCache.vmNominalSizeRatio=.10
opensphere.geometryCache.vmWarningSizeRatio=.08
opensphere.geometryCache.vmCriticalSizeRatio=.05

# Master Password properties
# Minimum length of master password.
opensphere.password.minLength=8

# Number of minimum requirements for strong password.
# Current minimum requirements include:
#   1 lower case alpha character
#   1 upper case alpha character
#   1 symbol
#   1 number
opensphere.password.minCharacterCategories=3

# Whether or not places names should be kept kept in memory or searched from file.
place.names.in.memory=false

# Put the internal frames in front of the GL canvas so that they can be viewed for debugging
opensphere.debug.showJInternalFrames=false

# How often to run the db garbage collector.
opensphere.db.gcPeriodMilliseconds=5000

# How long the db garbage collector can run.
opensphere.db.gcBudgetNanoseconds=100000000

# Minimum delay between collections. This is used if there was too much garbage for a single collection.
opensphere.db.gcDelayMilliseconds=400

# Enables an optimization that ignores tiles with blank images.
opensphere.checkForBlankImages=true

# Enables the dynamic compiler.
opensphere.dynamicCompile=false

# Use the new timeline or the old one
opensphere.timeline.useNewVersion=true
