package com.bitsys.common.http.ssl;

import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;
import java.util.Collection;

/**
 * Instances of this interface are given the opportunity to overrule or sustain
 * certificate handshake errors. For example, an untrusted certificate may be
 * received but instances of this interface can decide to allow the SSL
 * handshake with that certificate.
 */
public interface CertificateVerifier
{

    /**
     * Invoked when a verification issue was found and/or a certificate
     * exception was thrown. The verification issues do not necessarily assure
     * that a certificate exception will be generated. However, they may provide
     * clarification on the exception.
     *
     * @param chain the received certificate chain.
     * @param authType the key exchange algorithm used.
     * @param issues the collection of verification issues found.
     * @param certificateException the <code>CertificateException</code>
     *            generated by the <code>X509TrustManager</code>.
     * @return <code>true</code> if the certificate should be trusted.
     */
    boolean allowCertificate(X509Certificate[] chain, String authType, Collection<CertificateVerificationIssue> issues,
            CertificateException certificateException);
}
