//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.01.26 at 02:04:22 PM MST 
//

package net.opengis.wfs._110;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;

import net.opengis.ogc._110.FilterType;

/**
 * <p>
 * Java class for DeleteElementType complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="DeleteElementType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.opengis.net/ogc}Filter"/>
 *       &lt;/sequence>
 *       &lt;attribute name="handle" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="typeName" use="required" type="{http://www.w3.org/2001/XMLSchema}QName" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DeleteElementType", propOrder = { "filter" })
public class DeleteElementType
{

    @XmlElement(name = "Filter", namespace = "http://www.opengis.net/ogc", required = true)
    protected FilterType filter;

    @XmlAttribute(name = "handle")
    protected String handle;

    @XmlAttribute(name = "typeName", required = true)
    protected QName typeName;

    /**
     * 
     * The Filter element is used to constrain the scope of the delete operation
     * to those features identified by the filter. Feature instances can be
     * specified explicitly and individually using the identifier of each
     * feature instance OR a set of features to be operated on can be identified
     * by specifying spatial and non-spatial constraints in the filter. If no
     * filter is specified then an exception should be raised since it is
     * unlikely that a client application intends to delete all feature
     * instances.
     * 
     * 
     * @return possible object is {@link FilterType }
     * 
     */
    public FilterType getFilter()
    {
        return filter;
    }

    /**
     * Sets the value of the filter property.
     * 
     * @param value allowed object is {@link FilterType }
     * 
     */
    public void setFilter(FilterType value)
    {
        this.filter = value;
    }

    /**
     * Gets the value of the handle property.
     * 
     * @return possible object is {@link String }
     * 
     */
    public String getHandle()
    {
        return handle;
    }

    /**
     * Sets the value of the handle property.
     * 
     * @param value allowed object is {@link String }
     * 
     */
    public void setHandle(String value)
    {
        this.handle = value;
    }

    /**
     * Gets the value of the typeName property.
     * 
     * @return possible object is {@link QName }
     * 
     */
    public QName getTypeName()
    {
        return typeName;
    }

    /**
     * Sets the value of the typeName property.
     * 
     * @param value allowed object is {@link QName }
     * 
     */
    public void setTypeName(QName value)
    {
        this.typeName = value;
    }

}
