//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.01.26 at 02:04:22 PM MST 
//

package net.opengis.gml._311;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

/**
 * A sphere is a gridded surface given as a family of circles whose positions
 * vary linearly along the axis of the sphere, and whise radius varies in
 * proportions to the cosine function of the central angle. The horizontal
 * circles resemble lines of constant latitude, and the vertical arcs resemble
 * lines of constant longitude. NOTE! If the control points are sorted in terms
 * of increasing longitude, and increasing latitude, the upNormal of a sphere is
 * the outward normal. EXAMPLE If we take a gridded set of latitudes and
 * longitudes in degrees,(u,v) such as
 * 
 * (-90,-180) (-90,-90) (-90,0) (-90, 90) (-90, 180) (-45,-180) (-45,-90)
 * (-45,0) (-45, 90) (-45, 180) ( 0,-180) ( 0,-90) ( 0,0) ( 0, 90) ( 0, 180) (
 * 45,-180) ( 45,-90) ( 45,0) ( 45, -90) ( 45, 180) ( 90,-180) ( 90,-90) ( 90,0)
 * ( 90, -90) ( 90, 180)
 * 
 * And map these points to 3D using the usual equations (where R is the radius
 * of the required sphere).
 * 
 * z = R sin u x = (R cos u)(sin v) y = (R cos u)(cos v)
 * 
 * We have a sphere of Radius R, centred at (0,0), as a gridded surface. Notice
 * that the entire first row and the entire last row of the control points map
 * to a single point in each 3D Euclidean space, North and South poles
 * respectively, and that each horizontal curve closes back on itself forming a
 * geometric cycle. This gives us a metrically bounded (of finite size),
 * topologically unbounded (not having a boundary, a cycle) surface.
 * 
 * <p>
 * Java class for SphereType complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="SphereType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.opengis.net/gml}AbstractGriddedSurfaceType">
 *       &lt;attribute name="horizontalCurveType" type="{http://www.opengis.net/gml}CurveInterpolationType" fixed="circularArc3Points" />
 *       &lt;attribute name="verticalCurveType" type="{http://www.opengis.net/gml}CurveInterpolationType" fixed="circularArc3Points" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SphereType")
public class SphereType extends AbstractGriddedSurfaceType
{

    @XmlAttribute(name = "horizontalCurveType")
    protected CurveInterpolationType horizontalCurveType;

    @XmlAttribute(name = "verticalCurveType")
    protected CurveInterpolationType verticalCurveType;

    /**
     * Gets the value of the horizontalCurveType property.
     * 
     * @return possible object is {@link CurveInterpolationType }
     * 
     */
    public CurveInterpolationType getHorizontalCurveType()
    {
        if (horizontalCurveType == null)
        {
            return CurveInterpolationType.CIRCULAR_ARC_3_POINTS;
        }
        else
        {
            return horizontalCurveType;
        }
    }

    /**
     * Sets the value of the horizontalCurveType property.
     * 
     * @param value allowed object is {@link CurveInterpolationType }
     * 
     */
    public void setHorizontalCurveType(CurveInterpolationType value)
    {
        this.horizontalCurveType = value;
    }

    /**
     * Gets the value of the verticalCurveType property.
     * 
     * @return possible object is {@link CurveInterpolationType }
     * 
     */
    public CurveInterpolationType getVerticalCurveType()
    {
        if (verticalCurveType == null)
        {
            return CurveInterpolationType.CIRCULAR_ARC_3_POINTS;
        }
        else
        {
            return verticalCurveType;
        }
    }

    /**
     * Sets the value of the verticalCurveType property.
     * 
     * @param value allowed object is {@link CurveInterpolationType }
     * 
     */
    public void setVerticalCurveType(CurveInterpolationType value)
    {
        this.verticalCurveType = value;
    }

}
