//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.01.26 at 02:04:22 PM MST 
//

package net.opengis.gml._311;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

/**
 * A cylinder is a gridded surface given as a family of circles whose positions
 * vary along a set of parallel lines, keeping the cross sectional horizontal
 * curves of a constant shape. NOTE! Given the same working assumptions as in
 * the previous note, a Cylinder can be given by two circles, giving us the
 * control points of the form ((P1, P2, P3),(P4, P5, P6)).
 * 
 * <p>
 * Java class for CylinderType complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="CylinderType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.opengis.net/gml}AbstractGriddedSurfaceType">
 *       &lt;attribute name="horizontalCurveType" type="{http://www.opengis.net/gml}CurveInterpolationType" fixed="circularArc3Points" />
 *       &lt;attribute name="verticalCurveType" type="{http://www.opengis.net/gml}CurveInterpolationType" fixed="linear" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CylinderType")
public class CylinderType extends AbstractGriddedSurfaceType
{

    @XmlAttribute(name = "horizontalCurveType")
    protected CurveInterpolationType horizontalCurveType;

    @XmlAttribute(name = "verticalCurveType")
    protected CurveInterpolationType verticalCurveType;

    /**
     * Gets the value of the horizontalCurveType property.
     * 
     * @return possible object is {@link CurveInterpolationType }
     * 
     */
    public CurveInterpolationType getHorizontalCurveType()
    {
        if (horizontalCurveType == null)
        {
            return CurveInterpolationType.CIRCULAR_ARC_3_POINTS;
        }
        else
        {
            return horizontalCurveType;
        }
    }

    /**
     * Sets the value of the horizontalCurveType property.
     * 
     * @param value allowed object is {@link CurveInterpolationType }
     * 
     */
    public void setHorizontalCurveType(CurveInterpolationType value)
    {
        this.horizontalCurveType = value;
    }

    /**
     * Gets the value of the verticalCurveType property.
     * 
     * @return possible object is {@link CurveInterpolationType }
     * 
     */
    public CurveInterpolationType getVerticalCurveType()
    {
        if (verticalCurveType == null)
        {
            return CurveInterpolationType.LINEAR;
        }
        else
        {
            return verticalCurveType;
        }
    }

    /**
     * Sets the value of the verticalCurveType property.
     * 
     * @param value allowed object is {@link CurveInterpolationType }
     * 
     */
    public void setVerticalCurveType(CurveInterpolationType value)
    {
        this.verticalCurveType = value;
    }

}
