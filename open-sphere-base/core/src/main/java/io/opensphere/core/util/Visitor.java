package io.opensphere.core.util;

import java.util.Map;

/**
 * Defines the contract for a visitor, in which the visitor is passed to various
 * components within a tree, and each component supplies the visitor with data.
 * If the component has children, the component is responsible for passing the
 * visitor to each of the component's children to collect their data as well.
 *
 * @param <T> the type of result generated by the visitor.
 */
public interface Visitor<T>
{
    /**
     * Stores the supplied value into the visitor, associating it with the
     * supplied parameter name.
     *
     * @param pParameterName the name of the parameter to store.
     * @param pValue the value of the parameter to store.
     */
    void setValue(String pParameterName, String pValue);

    /**
     * Gets the values collected by the visitor during its traversal of the
     * tree.
     *
     * @return the values collected by the visitor during its traversal of the
     *         tree.
     */
    Map<String, String> getValues();

    /**
     * Gets the result of the visitor's operation.
     *
     * @return the result of the visitor's operation.
     */
    T getResult();
}
